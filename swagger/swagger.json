{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/area_tipo/": {
            "get": {
                "tags": [
                    "area_tipo"
                ],
                "description": "get AreaTipo",
                "operationId": "AreaTipoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AreaTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "area_tipo"
                ],
                "description": "create AreaTipo",
                "operationId": "AreaTipoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AreaTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AreaTipo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.AreaTipo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/area_tipo/{id}": {
            "get": {
                "tags": [
                    "area_tipo"
                ],
                "description": "get AreaTipo by id",
                "operationId": "AreaTipoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AreaTipo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "area_tipo"
                ],
                "description": "update the AreaTipo",
                "operationId": "AreaTipoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for AreaTipo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AreaTipo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.AreaTipo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "area_tipo"
                ],
                "description": "delete the AreaTipo",
                "operationId": "AreaTipoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/parametro/": {
            "get": {
                "tags": [
                    "parametro"
                ],
                "description": "get Parametro",
                "operationId": "ParametroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "parametro"
                ],
                "description": "create Parametro",
                "operationId": "ParametroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Parametro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/parametro/{id}": {
            "get": {
                "tags": [
                    "parametro"
                ],
                "description": "get Parametro by id",
                "operationId": "ParametroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro"
                ],
                "description": "update the Parametro",
                "operationId": "ParametroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Parametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Parametro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro"
                ],
                "description": "delete the Parametro",
                "operationId": "ParametroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/parametro_periodo/": {
            "get": {
                "tags": [
                    "parametro_periodo"
                ],
                "description": "get ParametroPeriodo",
                "operationId": "ParametroPeriodoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ParametroPeriodo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "parametro_periodo"
                ],
                "description": "create ParametroPeriodo",
                "operationId": "ParametroPeriodoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroPeriodo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroPeriodo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ParametroPeriodo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/parametro_periodo/{id}": {
            "get": {
                "tags": [
                    "parametro_periodo"
                ],
                "description": "get ParametroPeriodo by id",
                "operationId": "ParametroPeriodoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ParametroPeriodo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "parametro_periodo"
                ],
                "description": "update the ParametroPeriodo",
                "operationId": "ParametroPeriodoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ParametroPeriodo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParametroPeriodo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ParametroPeriodo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "parametro_periodo"
                ],
                "description": "delete the ParametroPeriodo",
                "operationId": "ParametroPeriodoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/periodo/": {
            "get": {
                "tags": [
                    "periodo"
                ],
                "description": "get Periodo",
                "operationId": "PeriodoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Periodo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "periodo"
                ],
                "description": "create Periodo",
                "operationId": "PeriodoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Periodo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Periodo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Periodo"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/periodo/{id}": {
            "get": {
                "tags": [
                    "periodo"
                ],
                "description": "get Periodo by id",
                "operationId": "PeriodoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Periodo"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "periodo"
                ],
                "description": "update the Periodo",
                "operationId": "PeriodoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Periodo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Periodo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Periodo"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "periodo"
                ],
                "description": "delete the Periodo",
                "operationId": "PeriodoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_parametro/": {
            "get": {
                "tags": [
                    "tipo_parametro"
                ],
                "description": "get TipoParametro",
                "operationId": "TipoParametroController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoParametro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_parametro"
                ],
                "description": "create TipoParametro",
                "operationId": "TipoParametroController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoParametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoParametro"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoParametro"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_parametro/{id}": {
            "get": {
                "tags": [
                    "tipo_parametro"
                ],
                "description": "get TipoParametro by id",
                "operationId": "TipoParametroController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoParametro"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_parametro"
                ],
                "description": "update the TipoParametro",
                "operationId": "TipoParametroController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoParametro content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoParametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoParametro"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_parametro"
                ],
                "description": "delete the TipoParametro",
                "operationId": "TipoParametroController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AreaTipo": {
            "title": "AreaTipo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Parametro": {
            "title": "Parametro",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "ParametroPadreId": {
                    "$ref": "#/definitions/models.Parametro"
                },
                "TipoParametroId": {
                    "$ref": "#/definitions/models.TipoParametro"
                }
            }
        },
        "models.ParametroPeriodo": {
            "title": "ParametroPeriodo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ParametroId": {
                    "$ref": "#/definitions/models.Parametro"
                },
                "PeriodoId": {
                    "$ref": "#/definitions/models.Periodo"
                },
                "Valor": {
                    "type": "string"
                }
            }
        },
        "models.Periodo": {
            "title": "Periodo",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "AplicacionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Ciclo": {
                    "type": "string"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "FinVigencia": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InicioVigencia": {
                    "type": "string"
                },
                "Nombre": {
                    "type": "string"
                },
                "Year": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoParametro": {
            "title": "TipoParametro",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "AreaTipoId": {
                    "$ref": "#/definitions/models.AreaTipo"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "parametro",
            "description": "ParametroController operations for Parametro\n"
        },
        {
            "name": "periodo",
            "description": "PeriodoController operations for Periodo\n"
        },
        {
            "name": "parametro_periodo",
            "description": "ParametroPeriodoController operations for ParametroPeriodo\n"
        },
        {
            "name": "tipo_parametro",
            "description": "TipoParametroController operations for TipoParametro\n"
        },
        {
            "name": "area_tipo",
            "description": "AreaTipoController operations for AreaTipo\n"
        }
    ]
}