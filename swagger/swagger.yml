swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /area_tipo/:
    get:
      tags:
      - area_tipo
      description: get AreaTipo
      operationId: AreaTipoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaTipo'
        "403":
          description: ""
    post:
      tags:
      - area_tipo
      description: create AreaTipo
      operationId: AreaTipoController.Post
      parameters:
      - in: body
        name: body
        description: body for AreaTipo content
        required: true
        schema:
          $ref: '#/definitions/models.AreaTipo'
      responses:
        "201":
          description: '{int} models.AreaTipo'
        "403":
          description: body is empty
  /area_tipo/{id}:
    get:
      tags:
      - area_tipo
      description: get AreaTipo by id
      operationId: AreaTipoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaTipo'
        "403":
          description: :id is empty
    put:
      tags:
      - area_tipo
      description: update the AreaTipo
      operationId: AreaTipoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AreaTipo content
        required: true
        schema:
          $ref: '#/definitions/models.AreaTipo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaTipo'
        "403":
          description: :id is not int
    delete:
      tags:
      - area_tipo
      description: delete the AreaTipo
      operationId: AreaTipoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /parametro/:
    get:
      tags:
      - parametro
      description: get Parametro
      operationId: ParametroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametro'
        "403":
          description: ""
    post:
      tags:
      - parametro
      description: create Parametro
      operationId: ParametroController.Post
      parameters:
      - in: body
        name: body
        description: body for Parametro content
        required: true
        schema:
          $ref: '#/definitions/models.Parametro'
      responses:
        "201":
          description: '{int} models.Parametro'
        "403":
          description: body is empty
  /parametro/{id}:
    get:
      tags:
      - parametro
      description: get Parametro by id
      operationId: ParametroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametro'
        "403":
          description: :id is empty
    put:
      tags:
      - parametro
      description: update the Parametro
      operationId: ParametroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Parametro content
        required: true
        schema:
          $ref: '#/definitions/models.Parametro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametro'
        "403":
          description: :id is not int
    delete:
      tags:
      - parametro
      description: delete the Parametro
      operationId: ParametroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /parametro_periodo/:
    get:
      tags:
      - parametro_periodo
      description: get ParametroPeriodo
      operationId: ParametroPeriodoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroPeriodo'
        "403":
          description: ""
    post:
      tags:
      - parametro_periodo
      description: create ParametroPeriodo
      operationId: ParametroPeriodoController.Post
      parameters:
      - in: body
        name: body
        description: body for ParametroPeriodo content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroPeriodo'
      responses:
        "201":
          description: '{int} models.ParametroPeriodo'
        "403":
          description: body is empty
  /parametro_periodo/{id}:
    get:
      tags:
      - parametro_periodo
      description: get ParametroPeriodo by id
      operationId: ParametroPeriodoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroPeriodo'
        "403":
          description: :id is empty
    put:
      tags:
      - parametro_periodo
      description: update the ParametroPeriodo
      operationId: ParametroPeriodoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ParametroPeriodo content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroPeriodo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroPeriodo'
        "403":
          description: :id is not int
    delete:
      tags:
      - parametro_periodo
      description: delete the ParametroPeriodo
      operationId: ParametroPeriodoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /periodo/:
    get:
      tags:
      - periodo
      description: get Periodo
      operationId: PeriodoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Periodo'
        "403":
          description: ""
    post:
      tags:
      - periodo
      description: create Periodo
      operationId: PeriodoController.Post
      parameters:
      - in: body
        name: body
        description: body for Periodo content
        required: true
        schema:
          $ref: '#/definitions/models.Periodo'
      responses:
        "201":
          description: '{int} models.Periodo'
        "403":
          description: body is empty
  /periodo/{id}:
    get:
      tags:
      - periodo
      description: get Periodo by id
      operationId: PeriodoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Periodo'
        "403":
          description: :id is empty
    put:
      tags:
      - periodo
      description: update the Periodo
      operationId: PeriodoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Periodo content
        required: true
        schema:
          $ref: '#/definitions/models.Periodo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Periodo'
        "403":
          description: :id is not int
    delete:
      tags:
      - periodo
      description: delete the Periodo
      operationId: PeriodoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_parametro/:
    get:
      tags:
      - tipo_parametro
      description: get TipoParametro
      operationId: TipoParametroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoParametro'
        "403":
          description: ""
    post:
      tags:
      - tipo_parametro
      description: create TipoParametro
      operationId: TipoParametroController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoParametro content
        required: true
        schema:
          $ref: '#/definitions/models.TipoParametro'
      responses:
        "201":
          description: '{int} models.TipoParametro'
        "403":
          description: body is empty
  /tipo_parametro/{id}:
    get:
      tags:
      - tipo_parametro
      description: get TipoParametro by id
      operationId: TipoParametroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoParametro'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_parametro
      description: update the TipoParametro
      operationId: TipoParametroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoParametro content
        required: true
        schema:
          $ref: '#/definitions/models.TipoParametro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoParametro'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_parametro
      description: delete the TipoParametro
      operationId: TipoParametroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.AreaTipo:
    title: AreaTipo
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.Parametro:
    title: Parametro
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
      TipoParametroId:
        $ref: '#/definitions/models.TipoParametro'
  models.ParametroPeriodo:
    title: ParametroPeriodo
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      ParametroId:
        $ref: '#/definitions/models.Parametro'
      PeriodoId:
        $ref: '#/definitions/models.Periodo'
      Valor:
        type: string
  models.Periodo:
    title: Periodo
    type: object
    properties:
      Activo:
        type: boolean
      AplicacionId:
        type: integer
        format: int64
      Ciclo:
        type: string
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      FinVigencia:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      InicioVigencia:
        type: string
        format: datetime
      Nombre:
        type: string
      ParametroId:
        $ref: '#/definitions/models.Parametro'
      Year:
        type: number
        format: double
  models.TipoParametro:
    title: TipoParametro
    type: object
    properties:
      Activo:
        type: boolean
      AreaTipoId:
        $ref: '#/definitions/models.AreaTipo'
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
tags:
- name: parametro
  description: |
    ParametroController operations for Parametro
- name: periodo
  description: |
    PeriodoController operations for Periodo
- name: parametro_periodo
  description: |
    ParametroPeriodoController operations for ParametroPeriodo
- name: tipo_parametro
  description: |
    TipoParametroController operations for TipoParametro
- name: area_tipo
  description: |
    AreaTipoController operations for AreaTipo
